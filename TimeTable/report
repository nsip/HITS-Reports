#!/usr/bin/perl
use perl5i::2;
use YAML;
use DBI;
use Data::Dumper;

# XXX CODE CHANGES
# 	- Common code here
# 		. Config
# 		. Database connection
# 		. DB to template
#	- Common code also in create_entry.pl

my $config = YAML::LoadFile($ENV{HOME} . "/.nsip_sif_data");
my $dbh = DBI->connect(
	$config->{mysql_dsn_hits}, 
	$config->{mysql_user}, 
	$config->{mysql_password},
	{RaiseError => 1, AutoCommit => 1}
);

# NOTE: This should be app_login.id (currently doesn't exist)
my ($app_template_id) = @ARGV;

my $report = {
	# Details about the application
	application => {
	},
	tests => [],
};

# ----------------------------------------------------------------------
# Common code - move to library
# ----------------------------------------------------------------------

my $sth = $dbh->prepare(q{
	SELECT 
		app.name app_name, app.title app_title,				-- Application
		app.sis_id, sis.sis_type, sis.sis_ref,				-- SIS
		vendor.id vendor_id, vendor.name vendor_name		-- Vendor
	FROM 
		app_login, app, vendor, sis
	WHERE 
		app_login.app_template_id = ?
		AND app.id = app_login.app_id
		AND vendor.id = app.vendor_id
		AND sis.id = app.sis_id
});
$sth->execute($app_template_id);
my $app = $sth->fetchrow_hashref;

if (!$app) {
	die "No valid match for app_template_id - $app_template_id\n";
}

$report->{application} = $app;

# ----------------------------------------------------------------------
# Specific
# ----------------------------------------------------------------------
my $dsn = $config->{mysql_dsn_template};
my $db = $app->{sis_ref};
$dsn =~ s/TEMPLATE/$db/;
my $dbh_sis = DBI->connect(
		$dsn,
		$config->{mysql_user}, 
		$config->{mysql_password},
		{RaiseError => 1, AutoCommit => 1}
);

# ----------------------------------------------------------------------
# TEST 1 - TeachingGroups
# ----------------------------------------------------------------------
$sth = $dbh_sis->prepare(q{
	SELECT
		tg.RefId, tg.ShortName,
		count(tgs.StudentPersonal_RefId) as count_student,
		count(tgt.StaffPersonal_RefId) as count_teacher
	FROM
		TeachingGroup tg, TeachingGroup_Student tgs, TeachingGroup_Teacher tgt
		-- TODO consider joining to StudentPersonal and StaffPersonal to check refs
	WHERE
		tgs.TeachingGroup_RefId = tg.RefId
		AND tgt.TeachingGroup_RefId = tg.RefId
	GROUP BY
		tg.RefId, tg.ShortName
});
$sth->execute();

my $test = {
	id => 'TeachingGroups',
	title => 'TeachingGroups Filled',
	description => 'Details on how this test is done',
	rawdata => $sth->fetchall_arrayref({}),
	result => '',
	weight => 1,	# Weight for score calculation
	score => 0,		# Score (0-100)
};

# XXX Analyse etc - e.g. how many we get etc?
push @{$report->{tests}}, $test;


# ----------------------------------------------------------------------
# TEST 2 - TimeTableCell
# ----------------------------------------------------------------------
$sth = $dbh_sis->prepare(q{
	SELECT
		ttc.RefId,
		tt.RefId as TimeTable_RefId,		-- Join each for checking
		tg.RefId as TeachingGroup_RefId,	
		ri.RefId as RoomInfo_RefId
	FROM
		TimeTableCell ttc,
		TimeTable tt,
		TeachingGroup tg,
		RoomInfo ri
	WHERE
		tt.RefId = ttc.TimeTable_RefId
		AND tg.RefId = ttc.TeachingGroup_RefId
		AND ri.RefId = ttc.RoomInfo_RefId
});
$sth->execute();

$test = {
	id => 'TimeTableCell',
	title => 'TimeTableCell Filled',
	description => 'Details on how this test is done',
	rawdata => $sth->fetchall_arrayref({}),
	result => '',
	weight => 1,	# Weight for score calculation
	score => 0,		# Score (0-100)
};

# XXX Analyse etc - e.g. how many we get etc?
push @{$report->{tests}}, $test;


# ----------------------------------------------------------------------
# Calculations
# ----------------------------------------------------------------------
my $total = 0;
my $score = 0;
foreach my $t ( @{$report->{tests}}) {
	$total += 100 * $t->{weight};
	$score += $t->{score} * $t->{weight};
}
$report->{score} = {
	score => $score,
	total => $total,
};

print Dumper($report);


__END__

Test 1 - Teaching Groups
	The payload contains n TeachingGroup? objects (n>0)

Test 2 - TimeTableCell
	The payload contains n TimeTableCell? objects (n>0)

Test 3 - Scheduled Activity
	The payload contains n ScheduledActivity? objects (n>0)

Test 4 - TimeTable
	The payload contains n TimeTable? objects (n>0)

COMMON
	There are n SchoolInfo? links in the payload (n>=1)
	All SchoolInfo? links in the payload are to Objects provided by HITS to the client
	There are n StudentPersonal? links in the payload (n>=1)
	All StudentPersonal? links in the payload are to Objects provided by HITS to the client
	There are n StaffPersonal? links in the payload (n>=1)
	All StaffPersonal? links in the payload are to Objects provided by HITS to the client
	There are n RoomInfo? links in the payload (n>=1)
	All RoomInfo? links in the payload are to Objects provided by HITS to the client
	There are n TimeTableSubject? links in the payload (n>=1)
	All TimeTableSubject? links in the payload are to Objects provided by HITS to the client

Note: We do not expect every instance of SchoolInfo?, StudentPersonal?, StaffPersonal?, RoomInfo?, TimeTableSubject? provided by HITS to be referenced by the returned objects. We are not testing for the completeness of timetabling software running over provisioned data, but only for the validity of the SIF payload they generate

Each instance of TimeTable? links to a School (Warning if it does not)

For each instance of TimeTable? linked to a School, TimeTable/SchoolLocalId? matches SchoolInfo/LocalId?, and TimeTable/SchoolName? matches SchoolInfo/SchoolName?, for that school (if provided)

Each instance of TeachingGroup? links to a School (Warning if it does not)

For each instance of TeachingGroup? linked to a School, TeachingGroup/SchoolLocalId? matches SchoolInfo/LocalId? (if provided)

Each instance of TeachingGroup? links to a TimeTable? Subject (warning if it does not)

For each instance of TeachingGroup? linked to a TimeTable? Subject, TeachingGroup/TimeTableSubjectLocalId? matches TimeTableSubject/LocalId? (if provided)

Each instance of TeachingGroup? links to n Students

For each instance of TeachingGroup? linked to a Student, TeachingGroup/StudentList/TeachingGroupStudent/StudentLocalId? matches StudentPersonal/LocalId?, and TeachingGroup/StudentList/TeachingGroupStudent/PersonInfo/Name? matches StudentPersonal/Name?

Each instance of TeachingGroup? links to n Staff (Warning if it does not)

For each instance of TeachingGroup? linked to a Staff, TeachingGroup/TeacherList/TeachingGroupTeacher/StaffLocalId? matches StaffPersonal/LocalId?, and TeachingGroup/TeacherList/TeachingGroupTeacher/PersonInfo/Name? matches StudentPersonal/Name?

Each instance of TeachingGroup? links to n Rooms (Warning if it does not)

For each instance of TeachingGroup? linked to a Room, TeachingGroup/TeachingGroupPeriodList/TeachingGroupPeriod/RoomNumber? matches RoomInfo/RoomNumber? (if provided)

Each instance of TimeTable? Cell links to a Timetable

Each instance of TimeTable? Cell links to a Timetable Subject

For each instance of TimeTable? Cell linked to a Timetable Subject, TimeTableCell/SubjectLocalId? matches TimeTableSubject/LocalId? (if provided)

Each instance of TimeTable? Cell links to a Teaching Group

For each instance of TimeTable? Cell linked to a TeachingGroup?, TimeTableCell/TeachingGroupLocalId? matches TeachingGroup/LocalId? (if provided)

Each instance of TimeTable? Cell links to a Room

For each instance of TimeTable? Cell linked to a Room, TimeTableCell/RoomNumber? matches RoomInfo/RoomNumber? (if provided)

Each instance of TimeTable? Cell may link to a Staff (Warning if it does not)

For each instance of TimeTable? Cell linked to a Staff, TimeTableCell/StaffLocalId? matches StaffPersonal/LocalId? (if provided)

Each instance of TimeTable? Cell may link to a School (Warning if it does not)

For each instance of TimeTable? Cell linked to a School, TimeTableCell/SchoolLocalId? matches SchoolInfo/LocalId? (if provided)

Each ScheduledActivity? provided is a dated instance of a TimeTableCell? object

[rule: ScheduledActivity/DayId? = TimeTableCell/DayId?

ScheduledActivity/PeriodId? = TimeTableCell/PeriodId?

ScheduledActivity/TimeTableRefId? = TimeTableCell/TimeTableRefId?

ScheduledActivity/Rooms/RoomInfoRefId? = TimeTableCell/RoomInfoRefId?

ScheduledActivity/TimeTableSubjectRefId? = TimeTableCell/TimeTableSubectRefId?

ScheduledActivity/TeachingGroup/TeachingGroupRefId? = TimeTableCell/TeachingGroupRefId?

ScheduledActivity/Teachers/TeacherCover/StaffPersonalRefId? = TimeTableCell/StaffPersonalRefId?]

